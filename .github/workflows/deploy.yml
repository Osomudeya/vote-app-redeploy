name: Build, Push, and Deploy Microservices to AKS

on:
  push:
    branches:
      - main

jobs:
  build-push-deploy:
    name: Build, Push, and Deploy Microservices
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to ACR
      run: |
        echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin

    - name: Build and Push Vote Service
      run: |
        docker build -f ./vote/Dockerfile -t ${{ secrets.ACR_LOGIN_SERVER }}/vote:latest ./vote
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/vote:latest

    - name: Build and Push Result Service
      run: |
        docker build -f ./result/Dockerfile -t ${{ secrets.ACR_LOGIN_SERVER }}/result:latest ./result
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/result:latest

    - name: Build and Push Worker Service
      run: |
        docker build -f ./worker/Dockerfile -t ${{ secrets.ACR_LOGIN_SERVER }}/worker:latest ./worker
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/worker:latest

    - name: Build and Push Redis Service
      run: |
        docker build -f ./redis/Dockerfile -t ${{ secrets.ACR_LOGIN_SERVER }}/redis:latest ./redis
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/redis:latest

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Set up AKS context
      uses: azure/aks-set-context@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}
        resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}

    - name: Deploy Microservices to AKS
      run: |
        kubectl apply -f ./k8s-specifications/db-deployment.yaml
        kubectl apply -f ./k8s-specifications/redis-deployment.yaml
        kubectl apply -f ./k8s-specifications/result-deployment.yaml
        kubectl apply -f ./k8s-specifications/vote-deployment.yaml
        kubectl apply -f ./k8s-specifications/worker-deployment.yaml
