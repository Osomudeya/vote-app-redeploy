name: Build and Deploy to AKS

on:
  pull_request:
    branches:
      - 'main'
    paths:
      - 'result/**'
      - '.github/workflows/build-and-deploy.yaml'

env:
  IMAGE_REGISTRY: myregistry.azurecr.io
  IMAGE_NAME: myapp/result
  AKS_RESOURCE_GROUP: my-aks-resource-group
  AKS_CLUSTER_NAME: my-aks-cluster
  K8S_DEPLOYMENT_FILE: ./K8s-specifications/results-deployment.yaml
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Azure CLI
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry
        run: |
          az acr login --name ${{ secrets.ACR_NAME }}

      - name: Build Docker image
        run: |
          docker build -t ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} -f ./result/Dockerfile .

      - name: Push Docker image to ACR
        run: |
          docker push ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Set AKS context
        run: |
          az aks get-credentials --resource-group ${{ env.AKS_RESOURCE_GROUP }} --name ${{ env.AKS_CLUSTER_NAME }}

      - name: Deploy to AKS
        run: |
          kubectl apply -f ${{ env.K8S_DEPLOYMENT_FILE }}

      - name: Update Image in Kubernetes Deployment
        run: |
          kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} ${ env.CONTAINER_NAME }}=${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} --namespace ${{ env.NAMESPACE }}
